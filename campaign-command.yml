

eureka:
  instance:
    prefer-ip-address: true
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/


spring:
  rabbitmq:
    hostname: localhost
    port: 5672
    username: test
    password: password

# ===============================
# = DATA SOURCE
# ===============================
  datasource:
    url: jdbc:mysql://${DATABASE_SERVER_HOST}:3306/${DATABASE}?useSSL=false&useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
    username: ${DATABASE_SERVER_USERNAME}
    password: ${DATABASE_SERVER_PASSWORD}


# Keep the connection alive if idle for a long time (needed in production)
    testWhileIdle: true
    validationQuery: SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
  jpa:
    show-sql: false

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
    hibernate:
      ddl-auto: update

# Naming strategy
# spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
      naming.physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
      

# Allows Hibernate to generate SQL optimized for a particular DBMS
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL5InnoDBDialect



axon:
  amqp:
    exchange: Campaign.Events
  